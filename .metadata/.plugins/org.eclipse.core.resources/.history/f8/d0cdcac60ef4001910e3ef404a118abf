package fr.eni.ecoleeni.maximot;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public final class Launcher {

	public static void main(String[] args) {
		char[] rndWord = tirerMotAleatoirement();
		rndWord = melange(rndWord);
		
		for (char c : rndWord) {
			System.out.print(c);
		}
	}

	public static char[] melange(char[] mot) {
		Random rgen = new Random(); // Random number generator
		int size = mot.length;

		for (int i = 0; i < size; i++) {
			int randomPosition = rgen.nextInt(size);
			char temp = mot[i];
			
			mot[i] = mot[randomPosition];
			mot[randomPosition] = temp;
		}
		return mot;
	}

	/**
	 * Fonction qui retourne un mot aléatoire du dictionnaire
	 * 
	 * @return Un tableau de caractère contenant les lettres du mot
	 */
	public static char[] tirerMotAleatoirement() {
		// On crée une liste pour stocker tous les mots du dico
		ArrayList<String> dico = new ArrayList<String>();
		try {
			// On spécifie l'adresse locale du dico
			File addr = new File("C:\\Users\\acaignar2019\\Documents\\06-POO\\TP\\dictionnaire.txt");
			// On lit et on stock tous les mots dans le buffer dico
			BufferedReader bfr = new BufferedReader(new InputStreamReader(new FileInputStream(addr), "UTF8"));
			String str;

			// Tant qu'il y a des mots dans le buffer, on les ajoute à la liste
			while ((str = bfr.readLine()) != null) {
				dico.add(str);
			}

			bfr.close();
		} catch (Exception e) {
			System.out.println("An error occurred.");
			e.printStackTrace();
		}

		// Crée un nombre aléatoirement
		int rndNb = (int) (Math.random() * dico.size());
		// On choisit un mot aléatoire avec le nombre tiré avant
		String rndWord = dico.get(rndNb);

		// Création d'un tableau de char de la taille du mot
		char[] tabRndWord = new char[rndWord.length()];

		// On place chaque lettre du mot dans le tableau
		for (int i = 0; i < tabRndWord.length; i++) {
			tabRndWord[i] = rndWord.charAt(i);
		}

		return tabRndWord;

	}

}
